/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package passportcheck;

import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.jdesktop.swingx.prompt.PromptSupport;
/**
 *
 * @author ntko
 */
public class PassportCheck extends javax.swing.JFrame {
    String surname = "";
    String givenName = "";
    String passportNumber = "";
    String dateOfBirth = "";
    String nationality = "";
    String country = "";
    String gender = "";
    String expiryDate = "";
    String personalNumber = "";
    String mrz = "";
    /**
     * Creates new form PassportCheck
     */
    public PassportCheck() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        panelOne = new javax.swing.JPanel();
        jLabelSurname = new javax.swing.JLabel();
        jLabelGivenName = new javax.swing.JLabel();
        jLabelCountry = new javax.swing.JLabel();
        jLabelPassportNo = new javax.swing.JLabel();
        jCountryCombo = new javax.swing.JComboBox<>();
        jPassportField = new javax.swing.JTextField();
        jSurnameField = new javax.swing.JTextField();
        jGivenNameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jNationalityCombo = new javax.swing.JComboBox<>();
        jLabelNationality = new javax.swing.JLabel();
        jLabelCountry2 = new javax.swing.JLabel();
        jPersonalNumberField = new javax.swing.JTextField();
        jLabelExpiry = new javax.swing.JLabel();
        jLabelGender = new javax.swing.JLabel();
        jGenderCombo = new javax.swing.JComboBox<>();
        jExpiryField = new javax.swing.JFormattedTextField();
        jDateOfBirthField = new javax.swing.JFormattedTextField();
        panelTwo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMachineReadableZoneArea = new javax.swing.JTextArea();
        jSubmitButton = new javax.swing.JButton();
        jBackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(240, 240, 240));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(655, 355));
        setResizable(false);
        setSize(new java.awt.Dimension(655, 355));

        mainPanel.setBackground(new java.awt.Color(240, 240, 240));
        mainPanel.setForeground(new java.awt.Color(240, 240, 240));
        mainPanel.setLayout(new java.awt.CardLayout());

        panelOne.setBackground(new java.awt.Color(240, 240, 240));
        panelOne.setForeground(new java.awt.Color(240, 240, 240));

        jLabelSurname.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabelSurname.setText("Surname*");
        jLabelSurname.setMaximumSize(new java.awt.Dimension(81, 15));
        jLabelSurname.setMinimumSize(new java.awt.Dimension(81, 15));

        jLabelGivenName.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabelGivenName.setText("Given names*");
        jLabelGivenName.setMaximumSize(new java.awt.Dimension(81, 15));
        jLabelGivenName.setMinimumSize(new java.awt.Dimension(81, 15));

        jLabelCountry.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabelCountry.setText("Issuing Country*");

        jLabelPassportNo.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabelPassportNo.setText("Passport No.*");

        jCountryCombo.setBackground(new java.awt.Color(255, 255, 255));
        jCountryCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Afghanistan", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antarctica", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "Brunei Darussalam", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo", "Cook Islands", "Costa Rica", "Cï¿½te d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Democratic People's Republic of Korea", "Democratic Republic of the Congo", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands (Malvinas)", "Faeroe Islands", "Fiji", "Finland", "France", "France - Metropolitan", "French Guiana", "French Polynesia", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard and McDonald Islands", "Holy See (Vatican City State)", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran, Islamic Republic of", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Lao People's Democratic Republic", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libyan Arab Jamahiriya", "Liechtenstein", "Lithuania", "Luxembourg", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Micronesia, Federated States of", "Monaco", "Mongolia", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands, Kingdom of the", "Netherlands Antilles", "Neutral Zone", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Korea", "Republic of Moldova", "Réunion", "Romania", "Russian Federation", "Rwanda", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia and the South Sandwich Island", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen Islands", "Swaziland", "Sweden", "Switzerland", "Syrian Arab Republic", "Taiwan Province of China", "Tajikistan", "Thailand", "The former Yugoslav Republic of Macedonia", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom - Citizen", "United Kingdom -Dependent territories citizen", "United Kingdom -National (overseas)", "United Kingdom -Overseas citizen", "United Kingdom -Protected Person", "United Kingdom -Subject", "United Republic of Tanzania", "United States of America", "United States of America Minor Outlying Islands", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Viet Nam", "Virgin Islands (Great Britian)", "Virgin Islands (United States)", "Wallis and Futuna Islands", "Western Sahara", "Yemen", "Zaire", "Zambia", "Zimbabwe" }));
        jCountryCombo.setToolTipText("");

        jPassportField.setBackground(new java.awt.Color(255, 255, 255));
        jPassportField.setForeground(new java.awt.Color(0, 0, 0));
        jPassportField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 122, 122)));
        jPassportField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                changed();
            }
            public void removeUpdate(DocumentEvent e) {
                changed();
            }
            public void insertUpdate(DocumentEvent e) {
                changed();
            }

            public void changed() {
                if (jPassportField.getText().equals("")){
                    jSubmitButton.setEnabled(false);
                }
                else {
                    jSubmitButton.setEnabled(true);
                }

            }
        });

        jSurnameField.setBackground(new java.awt.Color(255, 255, 255));
        jSurnameField.setForeground(new java.awt.Color(0, 0, 0));
        jSurnameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 122, 122)));
        jSurnameField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                changed();
            }
            public void removeUpdate(DocumentEvent e) {
                changed();
            }
            public void insertUpdate(DocumentEvent e) {
                changed();
            }

            public void changed() {
                if (jSurnameField.getText().equals("")){
                    jSubmitButton.setEnabled(false);
                }
                else {
                    jSubmitButton.setEnabled(true);
                }

            }
        });

        jGivenNameField.setBackground(new java.awt.Color(255, 255, 255));
        jGivenNameField.setForeground(new java.awt.Color(0, 0, 0));
        jGivenNameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 122, 122)));
        jGivenNameField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                changed();
            }
            public void removeUpdate(DocumentEvent e) {
                changed();
            }
            public void insertUpdate(DocumentEvent e) {
                changed();
            }

            public void changed() {
                if (jGivenNameField.getText().equals("")){
                    jSubmitButton.setEnabled(false);
                }
                else {
                    jSubmitButton.setEnabled(true);
                }

            }
        });

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel1.setText("Date of birth*");
        jLabel1.setMaximumSize(new java.awt.Dimension(81, 15));
        jLabel1.setMinimumSize(new java.awt.Dimension(81, 15));

        jNationalityCombo.setBackground(new java.awt.Color(255, 255, 255));
        jNationalityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Afghanistan", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antarctica", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "Brunei Darussalam", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo", "Cook Islands", "Costa Rica", "Cï¿½te d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Democratic People's Republic of Korea", "Democratic Republic of the Congo", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands (Malvinas)", "Faeroe Islands", "Fiji", "Finland", "France", "France - Metropolitan", "French Guiana", "French Polynesia", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard and McDonald Islands", "Holy See (Vatican City State)", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran, Islamic Republic of", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Lao People's Democratic Republic", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libyan Arab Jamahiriya", "Liechtenstein", "Lithuania", "Luxembourg", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Micronesia, Federated States of", "Monaco", "Mongolia", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands, Kingdom of the", "Netherlands Antilles", "Neutral Zone", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Korea", "Republic of Moldova", "Réunion", "Romania", "Russian Federation", "Rwanda", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia and the South Sandwich Island", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen Islands", "Swaziland", "Sweden", "Switzerland", "Syrian Arab Republic", "Taiwan Province of China", "Tajikistan", "Thailand", "The former Yugoslav Republic of Macedonia", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom - Citizen", "United Kingdom -Dependent territories citizen", "United Kingdom -National (overseas)", "United Kingdom -Overseas citizen", "United Kingdom -Protected Person", "United Kingdom -Subject", "United Republic of Tanzania", "United States of America", "United States of America Minor Outlying Islands", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Viet Nam", "Virgin Islands (Great Britian)", "Virgin Islands (United States)", "Wallis and Futuna Islands", "Western Sahara", "Yemen", "Zaire", "Zambia", "Zimbabwe" }));

        jLabelNationality.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabelNationality.setText("Nationality*");
        jLabelNationality.setMaximumSize(new java.awt.Dimension(81, 15));
        jLabelNationality.setMinimumSize(new java.awt.Dimension(81, 15));

        jLabelCountry2.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabelCountry2.setText("Personal number*");

        jPersonalNumberField.setBackground(new java.awt.Color(255, 255, 255));
        jPersonalNumberField.setForeground(new java.awt.Color(0, 0, 0));
        jPersonalNumberField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 122, 122)));
        jPersonalNumberField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                changed();
            }
            public void removeUpdate(DocumentEvent e) {
                changed();
            }
            public void insertUpdate(DocumentEvent e) {
                changed();
            }

            public void changed() {
                if (jPersonalNumberField.getText().equals("")){
                    jSubmitButton.setEnabled(false);
                }
                else {
                    jSubmitButton.setEnabled(true);
                }

            }
        });

        jLabelExpiry.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabelExpiry.setText("Expiry date*");

        jLabelGender.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabelGender.setText("Gender");

        jGenderCombo.setBackground(new java.awt.Color(255, 255, 255));
        jGenderCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female" }));

        jExpiryField.setBackground(new java.awt.Color(255, 255, 255));
        jExpiryField.setForeground(new java.awt.Color(0, 0, 0));
        jExpiryField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        PromptSupport.setPrompt("DD/MM/YYYY", jExpiryField);

        jExpiryField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                changed();
            }
            public void removeUpdate(DocumentEvent e) {
                changed();
            }
            public void insertUpdate(DocumentEvent e) {
                changed();
            }

            public void changed() {
                if (jExpiryField.getText().equals("")){
                    jSubmitButton.setEnabled(false);
                }
                else {
                    jSubmitButton.setEnabled(true);
                }

            }
        });

        jDateOfBirthField.setBackground(new java.awt.Color(255, 255, 255));
        jDateOfBirthField.setForeground(new java.awt.Color(0, 0, 0));
        jDateOfBirthField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        PromptSupport.setPrompt("DD/MM/YYYY", jDateOfBirthField);

        jDateOfBirthField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                changed();
            }
            public void removeUpdate(DocumentEvent e) {
                changed();
            }
            public void insertUpdate(DocumentEvent e) {
                changed();
            }

            public void changed() {
                if (jDateOfBirthField.getText().equals("")){
                    jSubmitButton.setEnabled(false);
                }
                else {
                    jSubmitButton.setEnabled(true);
                }

            }
        });

        javax.swing.GroupLayout panelOneLayout = new javax.swing.GroupLayout(panelOne);
        panelOne.setLayout(panelOneLayout);
        panelOneLayout.setHorizontalGroup(
            panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                        .addComponent(jLabelGivenName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelSurname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabelNationality, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGender, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCountry2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jGivenNameField)
                    .addComponent(jSurnameField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOneLayout.createSequentialGroup()
                        .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPersonalNumberField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jNationalityCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, 199, Short.MAX_VALUE)
                            .addComponent(jGenderCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateOfBirthField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelOneLayout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jLabelPassportNo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOneLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCountry, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(23, 23, 23)
                        .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPassportField)
                            .addComponent(jCountryCombo, 0, 191, Short.MAX_VALUE)
                            .addComponent(jExpiryField))))
                .addContainerGap())
        );
        panelOneLayout.setVerticalGroup(
            panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSurnameField)
                    .addComponent(jLabelSurname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jGivenNameField)
                    .addComponent(jLabelGivenName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateOfBirthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPassportField)
                    .addGroup(panelOneLayout.createSequentialGroup()
                        .addComponent(jLabelPassportNo, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNationality, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(jLabelCountry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCountryCombo)
                        .addComponent(jNationalityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOneLayout.createSequentialGroup()
                        .addComponent(jLabelGender)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jGenderCombo)
                    .addComponent(jLabelExpiry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jExpiryField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCountry2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPersonalNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(210, 210, 210))
        );

        mainPanel.add(panelOne, "panelOne");

        panelTwo.setBackground(new java.awt.Color(240, 240, 240));
        panelTwo.setForeground(new java.awt.Color(240, 240, 240));

        jMachineReadableZoneArea.setEditable(false);
        jMachineReadableZoneArea.setColumns(20);
        jMachineReadableZoneArea.setRows(5);
        jScrollPane1.setViewportView(jMachineReadableZoneArea);

        javax.swing.GroupLayout panelTwoLayout = new javax.swing.GroupLayout(panelTwo);
        panelTwo.setLayout(panelTwoLayout);
        panelTwoLayout.setHorizontalGroup(
            panelTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTwoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelTwoLayout.setVerticalGroup(
            panelTwoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTwoLayout.createSequentialGroup()
                .addContainerGap(232, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainPanel.add(panelTwo, "panelTwo");

        jSubmitButton.setText("Submit");
        jSubmitButton.setBorder(new javax.swing.border.MatteBorder(null));
        jSubmitButton.setEnabled(false);
        jSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSubmitButtonActionPerformed(evt);
            }
        });

        jBackButton.setText("Back");
        jBackButton.setBorder(new javax.swing.border.MatteBorder(null));
        jBackButton.setEnabled(false);
        jBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBackButton, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(jSubmitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mainPanel.getAccessibleContext().setAccessibleName("");
        mainPanel.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSubmitButtonActionPerformed
        try {
            surname = jSurnameField.getText();
            givenName = jGivenNameField.getText();
            DateFormat userInput = new SimpleDateFormat("dd/MM/yyyy");
            DateFormat formatNeeded = new SimpleDateFormat("yyMMdd");
            Date dob = null;
            Date exp = null;
            try {
                dob = userInput.parse(jDateOfBirthField.getText());
                exp = userInput.parse(jExpiryField.getText());
            } catch (ParseException ex) {
                Logger.getLogger(PassportCheck.class.getName()).log(Level.SEVERE, null, ex);
            }
            dateOfBirth = formatNeeded.format(dob);
            expiryDate = formatNeeded.format(exp);
            passportNumber = jPassportField.getText();
            int genderIndex = jGenderCombo.getSelectedIndex();
            switch (genderIndex) {
                case 1:
                    gender = "M";
                    break;
                case 2:
                    gender = "F";
                    break;
                default:
                    gender = "ERROR";
                    break;
            }
            personalNumber = jPersonalNumberField.getText();
            int nationalityIndex = jNationalityCombo.getSelectedIndex();
            nationalityIndex -= 1;  // -1 to offset Select
            int countryIndex = jCountryCombo.getSelectedIndex();
            countryIndex -= 1;  // -1 to offset Select
            CountryCode code = new CountryCode();
            nationality = code.toCode(nationalityIndex); 
            country = code.toCode(countryIndex);
            
            boolean ukCitizen = nationalityIndex == 221; // 221 = UK citizen. Code is always <<<<<<<<<<<<<0 or equal to 0
            if(ukCitizen){
                personalNumber = "<<<<<<<<<<<<<0";
            }
 
            ChecksumCalculator cc = new ChecksumCalculator();
            int checksumOne = cc.Checksum(passportNumber);
            int checksumTwo = cc.Checksum(dateOfBirth);
            int checksumThree = cc.Checksum(expiryDate);
            int checksumFour = cc.Checksum(passportNumber + checksumOne + dateOfBirth
                                + checksumTwo + expiryDate + checksumThree + personalNumber);
            String firstLine = "P<" + nationality + surname + "<<" + givenName;
            String chevronFill = "";
            for(int i = 0; i < 44 - firstLine.toCharArray().length; i++) {
                chevronFill += "<";
            }
            mrz = firstLine + chevronFill + "\r\n" +
                    passportNumber + checksumOne + country + dateOfBirth + checksumTwo + gender + expiryDate + checksumThree + personalNumber + checksumFour;
            jMachineReadableZoneArea.setText(mrz);
            CardLayout card = (CardLayout)mainPanel.getLayout();
            card.show(mainPanel, "panelTwo");
            jBackButton.setEnabled(true);
        } catch(java.lang.IllegalArgumentException e){
            System.out.print("missing date");
        }
    }//GEN-LAST:event_jSubmitButtonActionPerformed

    private void jBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBackButtonActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "panelOne");
        jBackButton.setEnabled(false);
    }//GEN-LAST:event_jBackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PassportCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PassportCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PassportCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PassportCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PassportCheck().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBackButton;
    private javax.swing.JComboBox<String> jCountryCombo;
    private javax.swing.JFormattedTextField jDateOfBirthField;
    private javax.swing.JFormattedTextField jExpiryField;
    private javax.swing.JComboBox<String> jGenderCombo;
    private javax.swing.JTextField jGivenNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCountry;
    private javax.swing.JLabel jLabelCountry2;
    private javax.swing.JLabel jLabelExpiry;
    private javax.swing.JLabel jLabelGender;
    private javax.swing.JLabel jLabelGivenName;
    private javax.swing.JLabel jLabelNationality;
    private javax.swing.JLabel jLabelPassportNo;
    private javax.swing.JLabel jLabelSurname;
    private javax.swing.JTextArea jMachineReadableZoneArea;
    private javax.swing.JComboBox<String> jNationalityCombo;
    private javax.swing.JTextField jPassportField;
    private javax.swing.JTextField jPersonalNumberField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSubmitButton;
    private javax.swing.JTextField jSurnameField;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelOne;
    private javax.swing.JPanel panelTwo;
    // End of variables declaration//GEN-END:variables
}
